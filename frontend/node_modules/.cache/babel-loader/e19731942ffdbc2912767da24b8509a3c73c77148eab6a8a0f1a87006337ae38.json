{"ast":null,"code":"useEffect(() => {\n  const fetchData = async () => {\n    try {\n      if (!currentUser || !balances) {\n        setIsLoading(true);\n        return;\n      }\n      const currentDate = new Date();\n      const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).toISOString().split('T')[0];\n      const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).toISOString().split('T')[0];\n      const transactions = await Api.getTransactions(startDate, endDate, \"date\", \"DESC\");\n      const deposits = transactions.filter(t => parseFloat(t.amount) < 0 && (t.category.toLowerCase().split(',').map(c => c.trim()).includes('deposit') || t.category.toLowerCase().split(',').map(c => c.trim()).includes('payroll') || t.category.toLowerCase().split(',').map(c => c.trim()).includes('refund')));\n      const spending = transactions.filter(t => parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('deposit') === -1 && t.category.toLowerCase().indexOf('transfer') === -1);\n      const totalDepositAmount = deposits.reduce((acc, t) => acc - parseFloat(t.amount), 0);\n      const totalSpendingAmount = spending.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n      setTotalDeposits(totalDepositAmount.toFixed(2));\n      setTotalSpending(totalSpendingAmount.toFixed(2));\n\n      // Moved the calculations here\n      const totalIncome = parseFloat(totalDeposits);\n      const totalExpense = parseFloat(totalSpending);\n      const remainingBalance = totalIncome - totalExpense;\n      setChartData({\n        labels: ['Total Income', 'Total Expense', 'Remaining Balance'],\n        datasets: [{\n          label: 'Money Overview',\n          data: [totalIncome, totalExpense, remainingBalance],\n          backgroundColor: ['rgba(75,192,192,0.6)', 'rgba(255,99,132,0.6)', 'rgba(255,205,86,0.6)'],\n          borderWidth: 1\n        }]\n      });\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  fetchData();\n}, [currentUser, balances]);","map":{"version":3,"names":["useEffect","fetchData","currentUser","balances","setIsLoading","currentDate","Date","startDate","getFullYear","getMonth","toISOString","split","endDate","transactions","Api","getTransactions","deposits","filter","t","parseFloat","amount","category","toLowerCase","map","c","trim","includes","spending","indexOf","totalDepositAmount","reduce","acc","totalSpendingAmount","setTotalDeposits","toFixed","setTotalSpending","totalIncome","totalDeposits","totalExpense","totalSpending","remainingBalance","setChartData","labels","datasets","label","data","backgroundColor","borderWidth","error","console","setError","message"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/InVOut.js"],"sourcesContent":["useEffect(() => {\n    const fetchData = async () => {\n        try {\n            if (!currentUser || !balances) {\n                setIsLoading(true);\n                return;\n            }\n\n            const currentDate = new Date();\n            const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).toISOString().split('T')[0];\n            const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).toISOString().split('T')[0];\n\n            const transactions = await Api.getTransactions(startDate, endDate, \"date\", \"DESC\");\n\n            const deposits = transactions.filter(t =>\n                parseFloat(t.amount) < 0 &&\n                (t.category.toLowerCase().split(',').map(c => c.trim()).includes('deposit') ||\n                    t.category.toLowerCase().split(',').map(c => c.trim()).includes('payroll') ||\n                    t.category.toLowerCase().split(',').map(c => c.trim()).includes('refund'))\n            );\n\n            const spending = transactions.filter(t =>\n                parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('deposit') === -1 && t.category.toLowerCase().indexOf('transfer') === -1\n            );\n\n            const totalDepositAmount = deposits.reduce((acc, t) => acc - parseFloat(t.amount), 0);\n            const totalSpendingAmount = spending.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n\n            setTotalDeposits(totalDepositAmount.toFixed(2));\n            setTotalSpending(totalSpendingAmount.toFixed(2));\n\n            // Moved the calculations here\n            const totalIncome = parseFloat(totalDeposits);\n            const totalExpense = parseFloat(totalSpending);\n            const remainingBalance = totalIncome - totalExpense;\n\n            setChartData({\n                labels: ['Total Income', 'Total Expense', 'Remaining Balance'],\n                datasets: [\n                    {\n                        label: 'Money Overview',\n                        data: [totalIncome, totalExpense, remainingBalance],\n                        backgroundColor: [\n                            'rgba(75,192,192,0.6)',\n                            'rgba(255,99,132,0.6)',\n                            'rgba(255,205,86,0.6)'\n                        ],\n                        borderWidth: 1,\n                    },\n                ],\n            });\n\n            setIsLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching transactions:\", error);\n            setError(error.message);\n            setIsLoading(false);\n        }\n    };\n\n    fetchData();\n}, [currentUser, balances]);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}