{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3001\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nexport class Api {\n  // the token for interactive with the API will be stored here.\n\n  /* skeleton method for get calls  */\n  static async request(endpoint) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"get\";\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = \"\".concat(BASE_URL, \"/\").concat(endpoint);\n    const headers = {\n      Authorization: \"Bearer \".concat(JoblyApi.token)\n    };\n    console.log(\"headers::::::\", headers);\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /* Logs in a user */\n  static async login(username, password) {\n    let res = await this.request(\"auth/token\", {\n      username,\n      password\n    }, \"post\");\n    this.token = res.token;\n    console.log(\"login token,\", res.token);\n    return res.token;\n  }\n\n  /* registers a user */\n  static async signup(username, password, firstName, lastName, email) {\n    let res = await this.request(\"auth/register\", {\n      username,\n      password,\n      firstName,\n      lastName,\n      email\n    }, \"post\");\n    this.token = res.token;\n    return res.token;\n  }\n  /* gets info on a user */\n  static async getUserInfo(username) {\n    let res = await this.request(\"users/\".concat(username));\n    return res;\n  }\n  /* update User */\n  static async updateUser(username, data) {\n    let res = await this.request(\"users/\".concat(username), data, \"patch\");\n    return res;\n  }\n}","map":{"version":3,"names":["axios","defaults","baseURL","BASE_URL","process","env","REACT_APP_BASE_URL","Api","request","endpoint","data","arguments","length","undefined","method","console","debug","url","concat","headers","Authorization","JoblyApi","token","log","params","err","error","response","message","Array","isArray","login","username","password","res","signup","firstName","lastName","email","getUserInfo","updateUser"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/Api.js"],"sourcesContent":["\nimport axios from \"axios\"\naxios.defaults.baseURL = \"http://localhost:3001\"\n\n\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nexport class Api {\n    // the token for interactive with the API will be stored here.\n    static token;\n\n\n    /* skeleton method for get calls  */\n    static async request(endpoint, data = {}, method = \"get\") {\n        console.debug(\"API Call:\", endpoint, data, method);\n\n        //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n        //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n        const url = `${BASE_URL}/${endpoint}`;\n        const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n        console.log(\"headers::::::\", headers)\n        const params = (method === \"get\")\n            ? data\n            : {};\n\n        try {\n            return (await axios({ url, method, data, params, headers })).data;\n        } catch (err) {\n            console.error(\"API Error:\", err.response);\n            let message = err.response.data.error.message;\n            throw Array.isArray(message) ? message : [message];\n        }\n    }\n\n    // Individual API routes\n\n    /* Logs in a user */\n    static async login(username, password) {\n        let res = await this.request(`auth/token`, { username, password }, \"post\");\n        this.token = res.token;\n        console.log(\"login token,\", res.token)\n        return res.token;\n    }\n\n    /* registers a user */\n    static async signup(username, password, firstName, lastName, email) {\n        let res = await this.request(`auth/register`, { username, password, firstName, lastName, email }, \"post\");\n        this.token = res.token;\n        return res.token;\n    };\n    /* gets info on a user */\n    static async getUserInfo(username) {\n        let res = await this.request(`users/${username}`);\n        return res;\n    };\n\n    /* update User */\n    static async updateUser(username, data) {\n        let res = await this.request(`users/${username}`, data, \"patch\");\n        return res;\n    };\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}