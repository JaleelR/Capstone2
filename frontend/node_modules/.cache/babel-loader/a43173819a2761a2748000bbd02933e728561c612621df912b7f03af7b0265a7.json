{"ast":null,"code":"useEffect(() => {\n  async function getTransactionsByMonth() {\n    try {\n      if (isNaN(year) || isNaN(month)) {\n        console.error('Invalid year or month:', year, month);\n        return;\n      }\n      const startDate = \"\".concat(year, \"-\").concat(String(month).padStart(2, '0'), \"-01\");\n      const endDate = \"\".concat(year, \"-\").concat(String(month).padStart(2, '0'), \"-30\"); // Assuming 30 days in a month for simplicity\n\n      const transactions = await Api.getTransactions(startDate, endDate, orderByColumn, orderBy);\n      setTransactionsSaved(transactions);\n    } catch (error) {\n      console.log(\"There was an error getting transactions\", error);\n    }\n  }\n  getTransactionsByMonth();\n}, [currentUser, year, month, orderByColumn, orderBy]);","map":{"version":3,"names":["useEffect","getTransactionsByMonth","isNaN","year","month","console","error","startDate","concat","String","padStart","endDate","transactions","Api","getTransactions","orderByColumn","orderBy","setTransactionsSaved","log","currentUser"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/Transactions.js"],"sourcesContent":["useEffect(() => {\n    async function getTransactionsByMonth() {\n        try {\n            if (isNaN(year) || isNaN(month)) {\n                console.error('Invalid year or month:', year, month);\n                return;\n            }\n\n            const startDate = `${year}-${String(month).padStart(2, '0')}-01`;\n            const endDate = `${year}-${String(month).padStart(2, '0')}-30`; // Assuming 30 days in a month for simplicity\n\n            const transactions = await Api.getTransactions(startDate, endDate, orderByColumn, orderBy);\n            setTransactionsSaved(transactions);\n        } catch (error) {\n            console.log(\"There was an error getting transactions\", error);\n        }\n    }\n    getTransactionsByMonth();\n}, [currentUser, year, month, orderByColumn, orderBy]);\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACZ,eAAeC,sBAAsBA,CAAA,EAAG;IACpC,IAAI;MACA,IAAIC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACE,KAAK,CAAC,EAAE;QAC7BC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEH,IAAI,EAAEC,KAAK,CAAC;QACpD;MACJ;MAEA,MAAMG,SAAS,MAAAC,MAAA,CAAML,IAAI,OAAAK,MAAA,CAAIC,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAK;MAChE,MAAMC,OAAO,MAAAH,MAAA,CAAML,IAAI,OAAAK,MAAA,CAAIC,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAK,CAAC,CAAC;;MAEhE,MAAME,YAAY,GAAG,MAAMC,GAAG,CAACC,eAAe,CAACP,SAAS,EAAEI,OAAO,EAAEI,aAAa,EAAEC,OAAO,CAAC;MAC1FC,oBAAoB,CAACL,YAAY,CAAC;IACtC,CAAC,CAAC,OAAON,KAAK,EAAE;MACZD,OAAO,CAACa,GAAG,CAAC,yCAAyC,EAAEZ,KAAK,CAAC;IACjE;EACJ;EACAL,sBAAsB,CAAC,CAAC;AAC5B,CAAC,EAAE,CAACkB,WAAW,EAAEhB,IAAI,EAAEC,KAAK,EAAEW,aAAa,EAAEC,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}