{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/ConnectBank.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\nimport { Api } from \"./Api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:3001';\nexport const ConnectBank = () => {\n  _s();\n  const [linkToken, setLinkToken] = useState();\n  const [publicToken, setPublicToken] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function token_link() {\n      const linkToken = await Api.getLinkToken();\n      console.log(linkToken);\n      setLinkToken(linkToken);\n    }\n    token_link();\n  }, []);\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n      setPublicToken(public_token);\n    }\n  });\n  useEffect(() => {\n    async function access_token() {\n      if (publicToken) {\n        const accessToken = await Api.exchangePublicToken(publicToken);\n        console.log(\"access token:\", accessToken);\n        //   try {\n        //     await Api.transactions();\n        //       console.log(\"It worked!\");\n        navigate(\"/\");\n\n        //   } catch (e) {\n        //     console.log(\"trans not made\", e)\n        //   }\n      } else {\n        console.log(\"no public token\");\n      }\n    }\n    ;\n    access_token();\n  }, [publicToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => open(),\n      disabled: !ready,\n      children: [{}, \" console.log() Connect a bank account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectBank, \"lunnKBmiPxMXtTQh1WQ9BF3Y0r0=\", false, function () {\n  return [useNavigate, usePlaidLink];\n});\n_c = ConnectBank;\nvar _c;\n$RefreshReg$(_c, \"ConnectBank\");","map":{"version":3,"names":["React","useState","useEffect","axios","usePlaidLink","Api","useNavigate","jsxDEV","_jsxDEV","defaults","baseURL","ConnectBank","_s","linkToken","setLinkToken","publicToken","setPublicToken","navigate","token_link","getLinkToken","console","log","open","ready","token","onSuccess","public_token","metadata","access_token","accessToken","exchangePublicToken","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/ConnectBank.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\"\nimport { usePlaidLink } from 'react-plaid-link';\nimport { Api } from \"./Api\";\nimport { useNavigate } from \"react-router-dom\"\naxios.defaults.baseURL = 'http://localhost:3001';\n\nexport const ConnectBank = () => {\n    const [linkToken, setLinkToken] = useState();\n    const [publicToken, setPublicToken] = useState();\n    const navigate = useNavigate();\n  \n   \n    useEffect(() => {\n        async function token_link() {\n            const linkToken = await Api.getLinkToken();\n            console.log(linkToken)\n            setLinkToken(linkToken);\n        }\n        token_link();\n    }, []);\n   \n\n\n    const { open, ready } = usePlaidLink({\n        token: linkToken,\n        onSuccess: (public_token, metadata) => {\n            setPublicToken(public_token);\n\n        },\n    });\n\n\n    useEffect(() => {\n        async function access_token() {\n            if (publicToken) {\n                const accessToken = await Api.exchangePublicToken(publicToken);\n                console.log(\"access token:\", accessToken);\n                //   try {\n                //     await Api.transactions();\n                //       console.log(\"It worked!\");\n                       navigate(\"/\"); \n                      \n                //   } catch (e) {\n                //     console.log(\"trans not made\", e)\n                //   }\n             \n            } else {\n                console.log(\"no public token\")\n            }\n        };\n        access_token();\n\n    }, [publicToken])\n\n   \n\n    return (\n        <div>\n           \n            <button onClick={() => open()} disabled={!ready}>\n               {{}} console.log()\n                Connect a bank account\n            </button>\n        </div>\n    )\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9CL,KAAK,CAACM,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAChD,MAAMgB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAG9BJ,SAAS,CAAC,MAAM;IACZ,eAAegB,UAAUA,CAAA,EAAG;MACxB,MAAML,SAAS,GAAG,MAAMR,GAAG,CAACc,YAAY,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;MACtBC,YAAY,CAACD,SAAS,CAAC;IAC3B;IACAK,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAM;IAAEI,IAAI;IAAEC;EAAM,CAAC,GAAGnB,YAAY,CAAC;IACjCoB,KAAK,EAAEX,SAAS;IAChBY,SAAS,EAAEA,CAACC,YAAY,EAAEC,QAAQ,KAAK;MACnCX,cAAc,CAACU,YAAY,CAAC;IAEhC;EACJ,CAAC,CAAC;EAGFxB,SAAS,CAAC,MAAM;IACZ,eAAe0B,YAAYA,CAAA,EAAG;MAC1B,IAAIb,WAAW,EAAE;QACb,MAAMc,WAAW,GAAG,MAAMxB,GAAG,CAACyB,mBAAmB,CAACf,WAAW,CAAC;QAC9DK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,WAAW,CAAC;QACzC;QACA;QACA;QACOZ,QAAQ,CAAC,GAAG,CAAC;;QAEpB;QACA;QACA;MAEJ,CAAC,MAAM;QACHG,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAClC;IACJ;IAAC;IACDO,YAAY,CAAC,CAAC;EAElB,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAIjB,oBACIP,OAAA;IAAAuB,QAAA,eAEIvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMV,IAAI,CAAC,CAAE;MAACW,QAAQ,EAAE,CAACV,KAAM;MAAAQ,QAAA,GAC5C,CAAC,CAAC,EAAC,uCAEP;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACzB,EAAA,CA3DWD,WAAW;EAAA,QAGHL,WAAW,EAcJF,YAAY;AAAA;AAAAkC,EAAA,GAjB3B3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}