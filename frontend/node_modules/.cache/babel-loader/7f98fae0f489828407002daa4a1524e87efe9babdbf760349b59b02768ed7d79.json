{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/InVOut.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InVOut = () => {\n  _s();\n  const {\n    currentUser,\n    balances\n  } = useContext(UserContext);\n  if (!balances) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  } else {\n    const checkingBalance = balances.filter(account => account.name.includes(\"CHECKING\"));\n    const getBalance = async () => {\n      try {\n        const transactions = await Api.getTransactions(); // Replace with your actual API call\n        const validTransactions = transactions.filter(t => parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('deposit') === -1 && t.category.toLowerCase().indexOf('transfer') === -1);\n        const total = validTransactions.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n        return total.toFixed(2);\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Income vs transactions \\uD83D\\uDCB8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Checking Balance: \", checkingBalance[0].balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Transactions: \", getBalance()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(InVOut, \"5uXvtXDojldVwsdp6rwJfoL9nSg=\");\n_c = InVOut;\nvar _c;\n$RefreshReg$(_c, \"InVOut\");","map":{"version":3,"names":["React","useContext","UserContext","Api","jsxDEV","_jsxDEV","InVOut","_s","currentUser","balances","children","fileName","_jsxFileName","lineNumber","columnNumber","checkingBalance","filter","account","name","includes","getBalance","transactions","getTransactions","validTransactions","t","parseFloat","amount","category","toLowerCase","indexOf","total","reduce","acc","toFixed","error","console","balance","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/InVOut.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\n\nexport const InVOut = () => {\n    const { currentUser, balances } = useContext(UserContext);\n\n    if (!balances) {\n        return <div>Loading</div>;\n    } else {\n        const checkingBalance = balances.filter(account => account.name.includes(\"CHECKING\"));\n\n        const getBalance = async () => {\n            try {\n                const transactions = await Api.getTransactions(); // Replace with your actual API call\n                const validTransactions = transactions.filter(t =>\n                    parseFloat(t.amount) > 0 &&\n                    t.category.toLowerCase().indexOf('deposit') === -1 &&\n                    t.category.toLowerCase().indexOf('transfer') === -1\n                );\n                const total = validTransactions.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n                return total.toFixed(2);\n            } catch (error) {\n                console.error(\"Error fetching transactions:\", error);\n            }\n        };\n\n        return (\n            <div>\n                <h1>Income vs transactions ðŸ’¸</h1>\n                <p>Checking Balance: {checkingBalance[0].balance}</p>\n                <p>Total Transactions: {getBalance()}</p>\n            </div>\n        );\n    }\n};\n\n\n   "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,GAAG,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAEzD,IAAI,CAACO,QAAQ,EAAE;IACX,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7B,CAAC,MAAM;IACH,MAAMC,eAAe,GAAGN,QAAQ,CAACO,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAErF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMlB,GAAG,CAACmB,eAAe,CAAC,CAAC,CAAC,CAAC;QAClD,MAAMC,iBAAiB,GAAGF,YAAY,CAACL,MAAM,CAACQ,CAAC,IAC3CC,UAAU,CAACD,CAAC,CAACE,MAAM,CAAC,GAAG,CAAC,IACxBF,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAClDL,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CACtD,CAAC;QACD,MAAMC,KAAK,GAAGP,iBAAiB,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAER,CAAC,KAAKQ,GAAG,GAAGP,UAAU,CAACD,CAAC,CAACE,MAAM,CAAC,EAAE,CAAC,CAAC;QACjF,OAAOI,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAED,oBACI7B,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCT,OAAA;QAAAK,QAAA,GAAG,oBAAkB,EAACK,eAAe,CAAC,CAAC,CAAC,CAACqB,OAAO;MAAA;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDT,OAAA;QAAAK,QAAA,GAAG,sBAAoB,EAACU,UAAU,CAAC,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEd;AACJ,CAAC;AAACP,EAAA,CA/BWD,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}