{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TransactionsCard } from \"./transactioncard\";\nimport { FormattedDate } from \"./FormattedDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n  let {\n    setTotalSpending\n  } = _ref;\n  const navigate = useNavigate();\n  const [transactionsSaved, setTransactionsSaved] = useState([]);\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [orderByColumn, setOrderByColumn] = useState('date');\n  const [orderBy, setOrderBy] = useState('DESC');\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const getTransactionsByMonth = async () => {\n    try {\n      if (isNaN(year) || isNaN(month)) {\n        console.error('Invalid year or month:', year, month);\n        return;\n      }\n      const startDate = \"\".concat(year, \"-\").concat(String(month).padStart(2, '0'), \"-01\");\n      const endDate = \"\".concat(year, \"-\").concat(String(month).padStart(2, '0'), \"-30\"); // Assuming 30 days in a month for simplicity\n\n      const transactions = await Api.getTransactions(startDate, endDate, orderByColumn, orderBy);\n      const validTransactions = transactions.filter(t => parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('transfer') === -1).map(t => ({\n        ...t,\n        amount: parseFloat(t.amount).toFixed(2)\n      }));\n      setTransactionsSaved(transactions);\n      setTotalSpending(validTransactions.reduce((total, t) => total + parseFloat(t.amount), 0).toFixed(2));\n    } catch (error) {\n      if (error.response && error.response.status === 429) {\n        console.log('Too many requests. Retrying after 5 seconds...');\n        setTimeout(() => {\n          getTransactionsByMonth(); // Retry after delay\n        }, 5000); // 5 seconds delay\n      } else {\n        console.log(\"There was an error getting transactions\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    getTransactionsByMonth();\n  }, [currentUser, year, month, orderByColumn, orderBy, setTotalSpending]);\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  const handleMonthChange = e => {\n    const selectedMonth = parseInt(e.target.value, 10);\n    setMonth(selectedMonth);\n  };\n  const handleYearChange = e => {\n    const selectedYear = parseInt(e.target.value, 10);\n    setYear(selectedYear);\n  };\n  const handleOrderByChange = e => {\n    setOrderBy(e.target.value);\n  };\n  const handleOrderByColumnChange = e => {\n    setOrderByColumn(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Transactions for \", currentUser.user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Select Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        value: month,\n        onChange: handleMonthChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"Select Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year\",\n        value: year,\n        onChange: handleYearChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"orderByColumn\",\n        children: \"Order By Column:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"orderByColumn\",\n        value: orderByColumn,\n        onChange: handleOrderByColumnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"orderBy\",\n        children: \"Order By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"orderBy\",\n        value: orderBy,\n        onChange: handleOrderByChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), transactionsSaved.map(t => /*#__PURE__*/_jsxDEV(TransactionsCard, {\n      name: t.merchant_name === null ? t.category : t.merchant_name,\n      amount: t.amount,\n      date: FormattedDate(t.date)\n    }, t.transaction_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total spending the month: $\", isNaN(totalSpending) ? '0.00' : totalSpending]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Transactions, \"WGkl5InMh2psP2lrOLzqKxhethM=\", false, function () {\n  return [useNavigate];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UserContext","Api","useNavigate","TransactionsCard","FormattedDate","jsxDEV","_jsxDEV","Transactions","_ref","_s","setTotalSpending","navigate","transactionsSaved","setTransactionsSaved","month","setMonth","Date","getMonth","year","setYear","getFullYear","orderByColumn","setOrderByColumn","orderBy","setOrderBy","currentUser","getTransactionsByMonth","isNaN","console","error","startDate","concat","String","padStart","endDate","transactions","getTransactions","validTransactions","filter","t","parseFloat","amount","category","toLowerCase","indexOf","map","toFixed","reduce","total","response","status","log","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","handleMonthChange","e","selectedMonth","parseInt","target","value","handleYearChange","selectedYear","handleOrderByChange","handleOrderByColumnChange","user","username","htmlFor","id","onChange","name","merchant_name","date","transaction_id","totalSpending","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/Transactions.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TransactionsCard } from \"./transactioncard\";\nimport { FormattedDate } from \"./FormattedDate\";\n\nexport const Transactions = ({ setTotalSpending }) => {\n    const navigate = useNavigate();\n    const [transactionsSaved, setTransactionsSaved] = useState([]);\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\n    const [year, setYear] = useState(new Date().getFullYear());\n    const [orderByColumn, setOrderByColumn] = useState('date');\n    const [orderBy, setOrderBy] = useState('DESC');\n\n    const { currentUser } = useContext(UserContext);\n\n    const getTransactionsByMonth = async () => {\n        try {\n            if (isNaN(year) || isNaN(month)) {\n                console.error('Invalid year or month:', year, month);\n                return;\n            }\n\n            const startDate = `${year}-${String(month).padStart(2, '0')}-01`;\n            const endDate = `${year}-${String(month).padStart(2, '0')}-30`; // Assuming 30 days in a month for simplicity\n\n            const transactions = await Api.getTransactions(startDate, endDate, orderByColumn, orderBy);\n\n            const validTransactions = transactions.filter(t =>\n                parseFloat(t.amount) > 0 &&\n                t.category.toLowerCase().indexOf('transfer') === -1\n            ).map(t => ({\n                ...t,\n                amount: parseFloat(t.amount).toFixed(2)\n            }));\n\n            setTransactionsSaved(transactions);\n            setTotalSpending(validTransactions.reduce((total, t) => total + parseFloat(t.amount), 0).toFixed(2));\n        } catch (error) {\n            if (error.response && error.response.status === 429) {\n                console.log('Too many requests. Retrying after 5 seconds...');\n                setTimeout(() => {\n                    getTransactionsByMonth(); // Retry after delay\n                }, 5000); // 5 seconds delay\n            } else {\n                console.log(\"There was an error getting transactions\", error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        getTransactionsByMonth();\n    }, [currentUser, year, month, orderByColumn, orderBy, setTotalSpending]);\n\n    if (!currentUser) {\n        return <div>Loading...</div>;\n    }\n\n    const handleMonthChange = (e) => {\n        const selectedMonth = parseInt(e.target.value, 10);\n        setMonth(selectedMonth);\n    };\n\n    const handleYearChange = (e) => {\n        const selectedYear = parseInt(e.target.value, 10);\n        setYear(selectedYear);\n    };\n\n    const handleOrderByChange = (e) => {\n        setOrderBy(e.target.value);\n    };\n\n    const handleOrderByColumnChange = (e) => {\n        setOrderByColumn(e.target.value);\n    };\n\n    return (\n        <div>\n            <h1>Transactions for {currentUser.user.username}</h1>\n\n            <div>\n                <label htmlFor=\"month\">Select Month:</label>\n                <select id=\"month\" value={month} onChange={handleMonthChange}>\n                    {/* ...options */}\n                </select>\n\n                <label htmlFor=\"year\">Select Year:</label>\n                <select id=\"year\" value={year} onChange={handleYearChange}>\n                    {/* ...options */}\n                </select>\n            </div>\n\n            <div>\n                <label htmlFor=\"orderByColumn\">Order By Column:</label>\n                <select id=\"orderByColumn\" value={orderByColumn} onChange={handleOrderByColumnChange}>\n                    {/* ...options */}\n                </select>\n\n                <label htmlFor=\"orderBy\">Order By:</label>\n                <select id=\"orderBy\" value={orderBy} onChange={handleOrderByChange}>\n                    {/* ...options */}\n                </select>\n            </div>\n\n            {transactionsSaved.map(t => (\n                <TransactionsCard\n                    key={t.transaction_id}\n                    name={t.merchant_name === null ? t.category : t.merchant_name}\n                    amount={t.amount}\n                    date={FormattedDate(t.date)}\n                />\n            ))}\n\n            <div>\n                Total spending the month: ${isNaN(totalSpending) ? '0.00' : totalSpending}\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}