{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/InVOut.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InVOut = () => {\n  _s();\n  const {\n    currentUser,\n    balances\n  } = useContext(UserContext);\n  const [totalDeposits, setTotalDeposits] = useState(null);\n  const [totalSpending, setTotalSpending] = useState(null);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        // Calculate start and end dates for the current month\n        const currentDate = new Date();\n        const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).toISOString().split('T')[0];\n        const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).toISOString().split('T')[0];\n        const transactions = await Api.getTransactions(startDate, endDate);\n\n        // Filter deposits\n        const deposits = transactions.filter(t => parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('deposit') !== -1);\n\n        // Filter spending\n        const spending = transactions.filter(t => parseFloat(t.amount) > 0 && t.category.toLowerCase().indexOf('deposit') === -1 && t.category.toLowerCase().indexOf('transfer') === -1);\n        const totalDepositAmount = deposits.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n        const totalSpendingAmount = spending.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n        setTotalDeposits(totalDepositAmount.toFixed(2));\n        setTotalSpending(totalSpendingAmount.toFixed(2));\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n  if (!balances) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  const checkingBalance = balances.filter(account => account.name.includes(\"CHECKING\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Income vs spending \\uD83D\\uDCB8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Checking Balance: \", checkingBalance[0].balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Deposits: \", totalDeposits !== null ? totalDeposits : 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Spending: \", totalSpending !== null ? totalSpending : 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(InVOut, \"7512WtgFdIg972mz3hLhpdAqWl4=\");\n_c = InVOut;\nvar _c;\n$RefreshReg$(_c, \"InVOut\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UserContext","Api","jsxDEV","_jsxDEV","InVOut","_s","currentUser","balances","totalDeposits","setTotalDeposits","totalSpending","setTotalSpending","fetchTransactions","currentDate","Date","startDate","getFullYear","getMonth","toISOString","split","endDate","transactions","getTransactions","deposits","filter","t","parseFloat","amount","category","toLowerCase","indexOf","spending","totalDepositAmount","reduce","acc","totalSpendingAmount","toFixed","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","checkingBalance","account","name","includes","balance","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Capstone2/frontend/src/InVOut.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./userContext\";\nimport { Api } from \"./Api\";\n\nexport const InVOut = () => {\n    const { currentUser, balances } = useContext(UserContext);\n    const [totalDeposits, setTotalDeposits] = useState(null);\n    const [totalSpending, setTotalSpending] = useState(null);\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            try {\n                // Calculate start and end dates for the current month\n                const currentDate = new Date();\n                const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).toISOString().split('T')[0];\n                const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).toISOString().split('T')[0];\n\n                const transactions = await Api.getTransactions(startDate, endDate);\n\n                // Filter deposits\n                const deposits = transactions.filter(t =>\n                    parseFloat(t.amount) > 0 &&\n                    t.category.toLowerCase().indexOf('deposit') !== -1\n                );\n\n                // Filter spending\n                const spending = transactions.filter(t =>\n                    parseFloat(t.amount) > 0 &&\n                    t.category.toLowerCase().indexOf('deposit') === -1 &&\n                    t.category.toLowerCase().indexOf('transfer') === -1\n                );\n\n                const totalDepositAmount = deposits.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n                const totalSpendingAmount = spending.reduce((acc, t) => acc + parseFloat(t.amount), 0);\n\n                setTotalDeposits(totalDepositAmount.toFixed(2));\n                setTotalSpending(totalSpendingAmount.toFixed(2));\n            } catch (error) {\n                console.error(\"Error fetching transactions:\", error);\n            }\n        };\n\n        fetchTransactions();\n    }, []);\n\n    if (!balances) {\n        return <div>Loading</div>;\n    }\n\n    const checkingBalance = balances.filter(account => account.name.includes(\"CHECKING\"));\n\n    return (\n        <div>\n            <h1>Income vs spending ðŸ’¸</h1>\n            <p>Checking Balance: {checkingBalance[0].balance}</p>\n            <p>Total Deposits: {totalDeposits !== null ? totalDeposits : 'Loading...'}</p>\n            <p>Total Spending: {totalSpending !== null ? totalSpending : 'Loading...'}</p>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}